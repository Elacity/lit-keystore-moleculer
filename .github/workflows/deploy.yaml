name: Deploy to Cloud Artifact Registry

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node 22
        uses: actions/setup-node@v2
        with:
          node-version: v22.15

      - name: Install Node.js dependencies
        run: npm ci

      - name: Run tests
        run: npm test

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: "Generate Build Variables"
        id: build_vars
        env:
          GCLOUD_PROJECT_ID: ${{ secrets.GCLOUD_PROJECT_ID }}
        run: |
          SHORT_SHA=${GITHUB_SHA:0:7}
          IMAGE_NAME="europe-west1-docker.pkg.dev/${GCLOUD_PROJECT_ID}/docker-repo/keystore-service:${SHORT_SHA}"
          echo "SHORT_SHA=${SHORT_SHA}" >> $GITHUB_OUTPUT
          echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_OUTPUT

      - id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCLOUD_SA_KEY }}"

      - name: "Setup Google Cloud CLI"
        uses: "google-github-actions/setup-gcloud@v2"
        with:
          version: ">= 527.0.0"

      - name: "Build and Push Docker Image"
        run: |
          gcloud auth configure-docker europe-west1-docker.pkg.dev
          docker buildx create --name multiarch-builder --use
          docker buildx build --platform linux/amd64,linux/arm64 -f ci/images/Dockerfile -t ${{ steps.build_vars.outputs.IMAGE_NAME }} --push .

  deploy:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - server: www
            path: /app/elacity/arch
          - server: develop-wl
            path: /app/elacity/arch
          - server: base-wl
            path: /app/elacity/base
    steps:
      - name: "Generate Build Variables"
        id: build_vars
        env:
          GCLOUD_PROJECT_ID: ${{ secrets.GCLOUD_PROJECT_ID }}
        run: |
          SHORT_SHA=${GITHUB_SHA:0:7}
          IMAGE_NAME="europe-west1-docker.pkg.dev/${GCLOUD_PROJECT_ID}/docker-repo/keystore-service:${SHORT_SHA}"
          echo "SHORT_SHA=${SHORT_SHA}" >> $GITHUB_OUTPUT
          echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_OUTPUT
          echo "Generated SHORT_SHA: ${SHORT_SHA}"
          echo "Generated IMAGE_NAME: ${IMAGE_NAME}"

      - name: "Authenticate to Google Cloud"
        id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCLOUD_SA_KEY }}"

      - name: "Setup Google Cloud CLI"
        uses: "google-github-actions/setup-gcloud@v2"
        with:
          version: ">= 527.0.0"
          install_components: "gcloud,gsutil"

      - name: "Verify Authentication"
        run: |
          gcloud auth list
          gcloud config list project

      - name: "Deploy to ${{ matrix.server }} Server"
        run: |
          echo "Deploying to ${{ matrix.server }} with image: ${{ steps.build_vars.outputs.IMAGE_NAME }}"
          echo "Using script path: ${{ matrix.path }}"
          gcloud compute ssh root@${{ matrix.server }} \
            --project ${{ secrets.GCLOUD_PROJECT_ID }} \
            --zone europe-west1-b \
            --quiet \
            --force-key-file-overwrite \
            --command="${{ matrix.path }}/bin/update.py keystore ${{ steps.build_vars.outputs.IMAGE_NAME }}"
